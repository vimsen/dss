%!PS-Adobe-2.0 EPSF-2.0
%%Title: target2_1.eps
%%Creator: gnuplot 4.6 patchlevel 4
%%CreationDate: Wed Nov  4 18:02:53 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 302 238
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 15.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 238 lineto 50 238 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.6 (September 2012)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 0.6 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (target2_1.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 4)
  /Author (dimitriv)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Nov  4 18:02:53 2015)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {BackgroundColor C 1.000 0 0 5040.00 3772.00 BoxColFill} if
1.000 UL
LTb
LCb setrgbcolor
1106 448 M
63 0 V
3618 0 R
-63 0 V
stroke
1022 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.015625)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1106 673 M
31 0 V
3650 0 R
-31 0 V
1106 899 M
63 0 V
3618 0 R
-63 0 V
stroke
1022 899 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.0625)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1106 1124 M
31 0 V
3650 0 R
-31 0 V
1106 1349 M
63 0 V
3618 0 R
-63 0 V
stroke
1022 1349 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.25)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1106 1575 M
31 0 V
3650 0 R
-31 0 V
1106 1800 M
63 0 V
3618 0 R
-63 0 V
stroke
1022 1800 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1106 2026 M
31 0 V
3650 0 R
-31 0 V
1106 2251 M
63 0 V
3618 0 R
-63 0 V
stroke
1022 2251 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1106 2476 M
31 0 V
3650 0 R
-31 0 V
1106 2702 M
63 0 V
3618 0 R
-63 0 V
stroke
1022 2702 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 16)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1106 2927 M
31 0 V
3650 0 R
-31 0 V
1106 3152 M
63 0 V
3618 0 R
-63 0 V
stroke
1022 3152 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 64)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1106 3378 M
31 0 V
3650 0 R
-31 0 V
1106 3603 M
63 0 V
3618 0 R
-63 0 V
stroke
1022 3603 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 256)]
] -46.7 MRshow
1.000 UL
LTb
LCb setrgbcolor
1720 448 M
0 63 V
0 3092 R
0 -63 V
stroke
1720 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
2486 448 M
0 63 V
0 3092 R
0 -63 V
stroke
2486 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 10)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
3253 448 M
0 63 V
0 3092 R
0 -63 V
stroke
3253 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 15)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4020 448 M
0 63 V
0 3092 R
0 -63 V
stroke
4020 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 20)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
4787 448 M
0 63 V
0 3092 R
0 -63 V
stroke
4787 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 25)]
] -46.7 MCshow
1.000 UL
LTb
LCb setrgbcolor
1.000 UL
LTb
LCb setrgbcolor
1106 3603 N
0 -3155 V
3681 0 V
0 3155 V
-3681 0 V
Z stroke
LCb setrgbcolor
112 2025 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Prosumption)]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
2946 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Time index)]
] -46.7 MCshow
LTb
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
% Begin plot #1
1.000 UL
LT0
LC0 setrgbcolor
/Helvetica findfont 140 scalefont setfont
/vshift -46 def
1106 2632 M
153 -37 V
154 19 V
153 304 V
154 95 V
153 97 V
153 48 V
154 4 V
153 4 V
153 -8 V
154 3 V
153 1 V
154 -5 V
153 -1 V
153 82 V
154 -15 V
153 -68 V
153 10 V
154 0 V
153 -46 V
154 -17 V
153 150 V
153 35 V
154 -9 V
153 -8 V
% End plot #1
% Begin plot #2
stroke
LT1
LC1 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2653 M
153 -18 V
154 8 V
153 286 V
154 33 V
153 -241 V
1840 349 R
154 73 V
153 -32 V
154 -41 V
153 170 V
153 48 V
154 -8 V
153 -5 V
% End plot #2
% Begin plot #3
stroke
LT2
LC2 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2473 M
153 -9 V
154 -3 V
153 -1 V
154 -7 V
153 -105 V
153 -19 V
154 -64 V
153 -73 V
153 -342 V
2640 746 L
307 1135 R
153 17 V
153 262 V
154 147 V
153 72 V
153 145 V
154 118 V
153 0 V
154 9 V
153 -28 V
153 -104 V
154 -28 V
153 -22 V
% End plot #3
% Begin plot #4
stroke
LT3
LC3 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2165 M
153 -157 V
154 59 V
153 729 V
154 137 V
153 148 V
153 52 V
154 -2 V
153 -4 V
153 1 V
154 4 V
153 -2 V
154 -6 V
153 0 V
153 86 V
154 -17 V
153 -75 V
153 -1 V
154 -30 V
153 -58 V
154 -32 V
153 200 V
153 52 V
154 -8 V
153 -6 V
% End plot #4
% Begin plot #5
stroke
LT4
LC4 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2683 M
153 -31 V
154 11 V
153 7 V
154 -5 V
3713 1385 M
154 1386 V
153 -2 V
154 70 V
153 -40 V
153 -59 V
154 -41 V
153 -29 V
% End plot #5
% Begin plot #6
stroke
LT5
LC5 setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #6
% Begin plot #7
1.000 UL
LT6
LC6 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2415 M
153 -3 V
154 1 V
153 3 V
154 -87 V
153 -68 V
153 -21 V
154 -117 V
153 -250 V
920 -99 R
154 331 V
153 117 V
153 103 V
154 69 V
153 114 V
154 -67 V
153 -4 V
153 -9 V
154 1 V
153 -6 V
% End plot #7
% Begin plot #8
stroke
LT7
LC7 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2589 M
153 -55 V
154 19 V
153 345 V
154 99 V
153 104 V
153 49 V
154 -1 V
153 -1 V
153 0 V
154 5 V
153 -1 V
154 -6 V
153 0 V
153 81 V
154 -16 V
153 -71 V
153 11 V
154 0 V
153 -52 V
154 -9 V
153 156 V
153 34 V
154 -9 V
153 -8 V
% End plot #8
% Begin plot #9
stroke
LT8
LC8 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2458 M
153 -48 V
154 27 V
153 22 V
154 83 V
153 -34 V
153 -57 V
154 -5 V
153 -7 V
153 8 V
154 -9 V
153 15 V
154 -77 V
153 0 V
153 47 V
154 -52 V
153 -25 V
153 13 V
154 91 V
153 39 V
154 25 V
153 -60 V
153 -14 V
154 22 V
153 -29 V
% End plot #9
% Begin plot #10
1.000 UP
stroke
LT0
LC0 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2633 Pls
1259 2593 Pls
1413 2611 Pls
1566 2918 Pls
1720 3013 Pls
1873 3110 Pls
2026 3158 Pls
2180 3158 Pls
2333 3158 Pls
2486 3159 Pls
2640 3163 Pls
2793 3162 Pls
2947 3160 Pls
3100 3157 Pls
3253 3238 Pls
3407 3222 Pls
3560 3154 Pls
3713 3165 Pls
3867 3165 Pls
4020 3119 Pls
4174 3102 Pls
4327 3253 Pls
4480 3287 Pls
4634 3278 Pls
4787 3269 Pls
% End plot #10
% Begin plot #11
1.000 UP
1.000 UL
LT1
LC1 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2653 Crs
1259 2635 Crs
1413 2643 Crs
1566 2929 Crs
1720 2962 Crs
1873 2721 Crs
3713 3070 Crs
3867 3143 Crs
4020 3111 Crs
4174 3070 Crs
4327 3240 Crs
4480 3288 Crs
4634 3280 Crs
4787 3275 Crs
% End plot #11
% Begin plot #12
1.000 UP
1.000 UL
LT2
LC2 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2472 Star
1259 2468 Star
1413 2464 Star
1566 2461 Star
1720 2453 Star
1873 2365 Star
2026 2358 Star
2180 2276 Star
2333 2204 Star
2486 1946 Star
2640 733 Star
2793 570 Star
2947 1723 Star
3100 1799 Star
3253 2146 Star
3407 2302 Star
3560 2385 Star
3713 2522 Star
3867 2640 Star
4020 2640 Star
4174 2650 Star
4327 2619 Star
4480 2516 Star
4634 2490 Star
4787 2471 Star
% End plot #12
% Begin plot #13
1.000 UP
1.000 UL
LT3
LC3 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2165 Box
1259 2008 Box
1413 2067 Box
1566 2796 Box
1720 2933 Box
1873 3081 Box
2026 3133 Box
2180 3131 Box
2333 3127 Box
2486 3128 Box
2640 3132 Box
2793 3130 Box
2947 3124 Box
3100 3124 Box
3253 3210 Box
3407 3193 Box
3560 3118 Box
3713 3117 Box
3867 3087 Box
4020 3029 Box
4174 2997 Box
4327 3197 Box
4480 3249 Box
4634 3241 Box
4787 3235 Box
% End plot #13
% Begin plot #14
1.000 UP
1.000 UL
LT4
LC4 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2683 BoxF
1259 2652 BoxF
1413 2663 BoxF
1566 2670 BoxF
1720 2665 BoxF
3713 1385 BoxF
3867 2771 BoxF
4020 2769 BoxF
4174 2839 BoxF
4327 2799 BoxF
4480 2740 BoxF
4634 2699 BoxF
4787 2670 BoxF
% End plot #14
% Begin plot #15
1.000 UP
1.000 UL
LT5
LC5 setrgbcolor
/Helvetica findfont 140 scalefont setfont
% End plot #15
% Begin plot #16
1.000 UP
1.000 UL
LT6
LC6 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2415 CircleF
1259 2412 CircleF
1413 2413 CircleF
1566 2416 CircleF
1720 2329 CircleF
1873 2261 CircleF
2026 2240 CircleF
2180 2123 CircleF
2333 1873 CircleF
3253 1774 CircleF
3407 2105 CircleF
3560 2222 CircleF
3713 2325 CircleF
3867 2394 CircleF
4020 2508 CircleF
4174 2441 CircleF
4327 2437 CircleF
4480 2428 CircleF
4634 2429 CircleF
4787 2423 CircleF
% End plot #16
% Begin plot #17
1.000 UP
1.000 UL
LT7
LC7 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2590 TriU
1259 2535 TriU
1413 2553 TriU
1566 2898 TriU
1720 2997 TriU
1873 3101 TriU
2026 3150 TriU
2180 3149 TriU
2333 3148 TriU
2486 3149 TriU
2640 3153 TriU
2793 3152 TriU
2947 3146 TriU
3100 3147 TriU
3253 3227 TriU
3407 3211 TriU
3560 3141 TriU
3713 3151 TriU
3867 3151 TriU
4020 3100 TriU
4174 3091 TriU
4327 3246 TriU
4480 3280 TriU
4634 3272 TriU
4787 3263 TriU
% End plot #17
% Begin plot #18
1.000 UP
1.000 UL
LT8
LC8 setrgbcolor
/Helvetica findfont 140 scalefont setfont
1106 2474 TriUF
1259 2414 TriUF
1413 2440 TriUF
1566 2461 TriUF
1720 2545 TriUF
1873 2510 TriUF
2026 2451 TriUF
2180 2446 TriUF
2333 2439 TriUF
2486 2442 TriUF
2640 2430 TriUF
2793 2448 TriUF
2947 2384 TriUF
3100 2374 TriUF
3253 2429 TriUF
3407 2375 TriUF
3560 2351 TriUF
3713 2361 TriUF
3867 2447 TriUF
4020 2487 TriUF
4174 2513 TriUF
4327 2453 TriUF
4480 2441 TriUF
4634 2473 TriUF
4787 2445 TriUF
% End plot #18
1.000 UL
LTb
LCb setrgbcolor
1106 3603 N
0 -3155 V
3681 0 V
0 3155 V
-3681 0 V
Z stroke
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
